rules:
- id: vuln-horde-da6afc7e
  pattern: '$this->_expected = @unserialize($vars[''_formvars'']);

    '
  pattern-not: '$this->_expected = @json_decode($vars[''_formvars''], true);

    '
  languages:
  - php
  message: 'The use of `unserialize` on user-controlled input can lead to PHP object
    injection vulnerabilities, allowing attackers to execute arbitrary code. This
    is particularly dangerous when dealing with form data. The fix replaces `unserialize`
    with `json_decode`, which is safer as it does not allow for object instantiation.
    Always use `json_decode` or other safe deserialization methods when handling user
    input.

    '
  severity: ERROR
  metadata:
    source-url: github.com/horde/horde/commit/da6afc7e9f4e290f782eca9dbca794f772caccb3
    category: security
    cwe:
    - CWE-502
    owasp:
    - A08:2021-Software and Data Integrity Failures
    technology:
    - php
- id: vuln-horde-30d5506c
  pattern: "if ($node->hasAttribute('href') &&\n    preg_match(\"/\\s*data:/i\", $node->getAttribute('href')))\
    \ {\n    $remove[] = 'href';\n}\n"
  pattern-not: "foreach ($attributes as $attribute) {\n    if ($node->hasAttribute($attribute)\
    \ &&\n        preg_match(\"/\\s*data:/i\", $node->getAttribute($attribute))) {\n\
    \        $remove[] = $attribute;\n    }\n}\n"
  languages:
  - php
  message: 'Detected a potential XSS vulnerability due to insufficient validation
    of data URLs in link-like elements. This can allow attackers to inject malicious
    scripts via data URLs. To fix this, ensure that all relevant attributes (e.g.,
    ''href'', ''xlink:href'', ''action'') are checked for data URLs and removed if
    found.

    '
  severity: ERROR
  metadata:
    source-url: github.com/horde/horde/commit/30d5506c20d26efbb9942fbdc6f981a0bd333b97
    category: security
    cwe:
    - CWE-79
    owasp:
    - 'A7: Cross-Site Scripting (XSS)'
    references:
    - https://owasp.org/www-community/attacks/XSS/
    technology:
    - php
- id: vuln-horde-4c3e18f1
  pattern: 'if (empty($DN)) { ... }

    if (empty($PASSWORD)) { ... }

    '
  pattern-not: 'if (is_null($DN)) { ... }

    if (is_null($PASSWORD)) { ... }

    '
  languages:
  - php
  message: "Using `empty()` to check for null values in LDAP bind parameters can lead\
    \ to security vulnerabilities. \nAn empty string or other falsy values might be\
    \ accepted as valid input, potentially allowing unauthorized access. \nUse `is_null()`\
    \ instead to explicitly check for null values.\n"
  severity: ERROR
  metadata:
    source-url: github.com/horde/horde/commit/4c3e18f1724ab39bfef10c189a5b52036a744d55
    category: security
    cwe:
    - CWE-287
    owasp:
    - 'A2: Broken Authentication'
    technology:
    - php
