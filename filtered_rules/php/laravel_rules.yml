rules:
- id: vuln-framework-576cba74
  pattern: '$QUERY->where(''remember_token'', $TOKEN);

    return $this->getGenericUser($USER);

    '
  pattern-not: 'return hash_equals($USER->remember_token, $TOKEN) ? $this->getGenericUser($USER)
    : null;

    '
  languages:
  - php
  message: 'The code directly compares a token using a database query, which is vulnerable
    to timing attacks. Timing attacks can allow an attacker to infer information about
    the token by measuring the time taken for the comparison. Use `hash_equals()`
    to perform a constant-time comparison, which mitigates this vulnerability.

    '
  severity: ERROR
  metadata:
    source-url: github.com/laravel/framework/commit/576cba749f9cfa150e9ba3eb23c06c70b75f64a8
    category: security
    cwe:
    - CWE-208
    owasp:
    - 'A02: Cryptographic Failures'
    references:
    - https://www.php.net/manual/en/function.hash-equals.php
    technology:
    - php
- id: vuln-framework-ccea1bfc
  pattern: '[''php'', ''php3'', ''php4'', ''php5'', ''phtml'']

    '
  pattern-not: '[''php'', ''php3'', ''php4'', ''php5'', ''phtml'', ''phar'']

    '
  languages:
  - php
  message: 'The list of potentially dangerous file extensions is incomplete, missing
    ''phar''.

    This could allow attackers to upload malicious PHAR (PHP Archive) files, which
    can lead to arbitrary code execution.

    Update the list to include ''phar'' to prevent such attacks.

    '
  severity: ERROR
  metadata:
    source-url: github.com/laravel/framework/commit/ccea1bfcbb37cf923dc1bb30cdbf2effbfb1619c
    category: security
    cwe:
    - CWE-434
    owasp:
    - 'A1: Injection'
    references:
    - https://www.php.net/manual/en/intro.phar.php
    technology:
    - php
- id: vuln-framework-c99098fc
  pattern: '$this->contextual[$concrete][$abstract] = $implementation;

    '
  pattern-not: '$this->contextual[$concrete][$this->getAlias($abstract)] = $implementation;

    '
  languages:
  - php
  message: 'The code directly uses the abstract binding without resolving its alias,
    which can lead to incorrect contextual bindings. This can cause unexpected behavior
    when aliases are used. Always resolve aliases using `getAlias()` to ensure correct
    binding resolution.

    '
  severity: ERROR
  metadata:
    source-url: github.com/laravel/framework/commit/c99098fc85c9633db578f70fba454184609c515d
    category: security
    cwe:
    - CWE-670
    owasp:
    - 'A9: Using Components with Known Vulnerabilities'
    references:
    - https://laravel.com/docs/container
    technology:
    - php
