rules:
- id: vuln-redis-e89086e0
  pattern: 'size_t $POS = luaL_optinteger($L, $ARG, 1) - 1;

    ...

    luaL_argcheck($L, $POS + $SIZE <= $LD, $ARG2, "data string too short");

    '
  pattern-not: 'size_t $POS = luaL_optinteger($L, $ARG, 1);

    luaL_argcheck($L, $POS > 0, $ARG, "offset must be 1 or greater");

    $POS--;

    ...

    luaL_argcheck($L, $SIZE <= $LD && $POS <= $LD - $SIZE, $ARG2, "data string too
    short");

    '
  languages:
  - c
  message: 'The code contains a potential integer underflow vulnerability due to incorrect
    offset calculation.

    When `luaL_optinteger` returns a value less than 1, subtracting 1 can cause an
    underflow, leading to memory corruption or crashes.

    The fix includes a check to ensure the offset is greater than 0 before subtraction
    and corrects the bounds checking logic.

    To fix this, ensure the offset is validated before subtraction and use proper
    bounds checking.

    '
  severity: ERROR
  metadata:
    source-url: github.com/antirez/redis/commit/e89086e09a38cc6713bcd4b9c29abf92cf393936
    category: security
    cwe:
    - 'CWE-191: Integer Underflow (Wrap or Wraparound)'
    owasp:
    - 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/191.html
    technology:
    - c
- id: vuln-redis-874804da
  pattern: 'if ($C->flags & CLIENT_CLOSE_AFTER_REPLY) break;

    '
  pattern-not: 'if ($C->flags & (CLIENT_CLOSE_AFTER_REPLY|CLIENT_CLOSE_ASAP)) break;

    '
  languages:
  - c
  message: 'Detected a missing check for CLIENT_CLOSE_ASAP flag in Redis networking
    code. This vulnerability could allow cross-protocol scripting attacks where an
    attacker sends HTTP commands (like POST or Host:) to Redis, potentially compromising
    the instance. The fix involves adding a check for the CLIENT_CLOSE_ASAP flag to
    terminate connections immediately when such commands are detected.

    '
  severity: ERROR
  metadata:
    source-url: github.com/antirez/redis/commit/874804da0c014a7d704b3d285aa500098a931f50
    category: security
    cwe:
    - CWE-113
    owasp:
    - 'A1: Injection'
    references:
    - https://redis.io/topics/security
    technology:
    - c
- id: vuln-redis-71536684
  pattern: 'FILE *$FP = fopen($FILENAME, "w");

    '
  pattern-not: 'mode_t $OLD_UMASK = umask($MODE);

    FILE *$FP;

    $FP = fopen($FILENAME, "w");

    umask($OLD_UMASK);

    chmod($FILENAME, $PERMISSIONS);

    '
  languages:
  - c
  message: 'Detected insecure file creation without proper permissions. This can lead
    to

    security vulnerabilities where sensitive files are created with overly permissive

    access rights, allowing unauthorized users to read or modify them. To fix this,

    use umask to restrict permissions during file creation and explicitly set

    appropriate permissions with chmod.

    '
  severity: ERROR
  metadata:
    source-url: github.com/antirez/redis/commit/71536684a788dc859e42132a2c5a2b7373414375
    category: security
    cwe:
    - 'CWE-276: Incorrect Default Permissions'
    owasp: A05:2021 - Security Misconfiguration
    technology:
    - c
- id: vuln-redis-01173bc8
  pattern: 'getnum($FMT, $DF)

    '
  pattern-not: 'getnum($L, $FMT, $DF)

    '
  languages:
  - c
  message: 'Detected unsafe use of getnum() without lua_State parameter, which can
    lead to integer overflow vulnerabilities. The function does not perform proper
    bounds checking, which could result in undefined behavior or security issues.
    Always use the updated version of getnum() that includes the lua_State parameter
    and performs overflow checks.

    '
  severity: ERROR
  metadata:
    source-url: github.com/antirez/redis/commit/01173bc8097391b2e46c4d56a080709c219fda53
    category: security
    cwe:
    - CWE-190
    owasp:
    - 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/190.html
    technology:
    - c
