rules:
- id: vuln-gstreamer-d58f668e
  pattern: "guint16 $SECTION_LENGTH;\n...\nif (G_UNLIKELY ($DATA_SIZE < $MIN_SIZE))\
    \ {\n  ...\n}\n"
  pattern-not: "guint16 $SECTION_LENGTH = 0;\n...\nif (G_UNLIKELY ($DATA_SIZE < 3))\
    \ {\n  ...\n}\nif (G_UNLIKELY ($DATA_SIZE < 11)) {\n  ...\n}\n"
  languages:
  - c
  message: 'Detected a potential vulnerability due to missing initialization of section_length
    and insufficient size checks for MPEG-TS packets. This can lead to undefined behavior
    or security issues when processing malformed packets. The fix initializes section_length
    to 0 and adds proper size checks for both short and long packets.

    '
  severity: ERROR
  metadata:
    source-url: github.com/gstreamer/gstreamer/commit/d58f668ece8795bddb3316832e1848c7b7cf38ac
    category: security
    cwe:
    - CWE-457
    - CWE-125
    owasp: 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/457.html
    - https://cwe.mitre.org/data/definitions/125.html
    technology:
    - c
- id: vuln-gstreamer-7b12593c
  pattern: "guint16 $I = 0, $NB_PROGRAMS;\n...\nwhile ($DATA < $END - 4) {\n  ...\n\
    \  $I++;\n}\n"
  pattern-not: "guint16 $I, $NB_PROGRAMS;\n...\nfor ($I = 0; $I < $NB_PROGRAMS; $I++)\
    \ {\n  ...\n}\n"
  languages:
  - c
  message: "Detected a potential unbounded loop due to missing bounds check on the\
    \ loop counter. \nThis could lead to out-of-bounds access or infinite loops if\
    \ the loop condition is not properly constrained. \nEnsure the loop counter is\
    \ bounded by the number of programs (nb_programs) using a for loop instead of\
    \ a while loop.\n"
  severity: ERROR
  metadata:
    source-url: github.com/gstreamer/gstreamer/commit/7b12593cceaa0726d7fc370a7556a8e773ccf318
    category: security
    cwe:
    - 'CWE-835: Loop with Unreachable Exit Condition (''Infinite Loop'')'
    technology:
    - c
- id: vuln-gstreamer-45dcd0b9
  pattern: 'gst_object_unref($VAR);

    '
  pattern-not: 'gst_object_unref(flxdec);

    '
  languages:
  - c
  message: 'The code contains a potentially unsafe use of `gst_object_unref` with
    a variable that may not be properly managed, leading to potential double-free
    or use-after-free vulnerabilities. This can cause crashes or security exploits.
    Ensure that the object being unreferenced is properly managed and not unrefed
    multiple times.

    '
  severity: ERROR
  metadata:
    source-url: github.com/gstreamer/gstreamer/commit/45dcd0b9ccf33ed85cdafeb871a3781f5be57fd9
    category: security
    cwe:
    - CWE-416
    owasp:
    - 'A9: Using Components with Known Vulnerabilities'
    references:
    - https://gstreamer.freedesktop.org/documentation/gstreamer/gstobject.html?gi-language=c#gst-object-unref
    technology:
    - c
