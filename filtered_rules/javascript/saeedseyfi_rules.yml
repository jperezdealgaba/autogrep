rules:
- id: vuln-exec-local-bin-d4258663
  pattern: "return new Promise((resolve, reject) => {\n    const cmd = `${process.cwd()}/node_modules/.bin/${bin}`;\n\
    \    ...\n})\n"
  pattern-not: "return new Promise(async (resolve, reject) => {\n    const binDir\
    \ = `${process.cwd()}/node_modules/.bin`;\n    const cmd = path.join(binDir, bin);\n\
    \    if (!cmd.startsWith(binDir)) {\n        reject(new Error(`${cmd} within the\
    \ expected directory`));\n        return;\n    }\n    try {\n        await fs.access(cmd,\
    \ fs.constants.X_OK);\n    } catch (err) {\n        reject(new Error(`${cmd} is\
    \ not accessible: ${err.message}`));\n        return;\n    }\n    ...\n})\n"
  languages:
  - javascript
  message: 'Detected insecure command execution without proper path validation and
    access checks.

    This can lead to arbitrary command execution if the binary path is not properly
    validated.

    To fix this, ensure the command path is validated to be within the expected directory

    and check file accessibility before execution.

    '
  severity: ERROR
  metadata:
    source-url: github.com/saeedseyfi/exec-local-bin/commit/d425866375c85038133a6f79db2aac66c0a72624
    category: security
    cwe:
    - CWE-73
    - CWE-78
    owasp:
    - 'A1: Injection'
    references:
    - https://owasp.org/www-community/attacks/Command_Injection
    technology:
    - javascript
