rules:
- id: vuln-i18next-34e8e13a
  pattern: '$STR.replace(new RegExp([$PREFIX, $KEY, $SUFFIX].join(''''), ''g''), $REPLACEMENT)

    '
  pattern-not: "$STR.replace(new RegExp([$PREFIX, '(.+?)', '(HTML)?', $SUFFIX].join(''),\
    \ 'g'), function (wholeMatch, keyMatch, htmlMatched) {\n    ...\n    if ($ESCAPE_INTERPOLATION\
    \ && !htmlMatched) {\n        return $ESCAPE_FUNCTION($VALUE);\n    }\n    return\
    \ $VALUE;\n})\n"
  languages:
  - javascript
  message: Potential XSS vulnerability due to unsanitized interpolation in i18next.
    Ensure interpolated values are properly escaped to prevent injection attacks.
  severity: ERROR
  metadata:
    source-url: github.com/i18next/i18next/commit/34e8e13a2b64708a0aed01092e4dbfd0e5013831
    category: security
    cwe:
    - CWE-79
    owasp:
    - 'A1: Injection'
    references:
    - https://github.com/i18next/i18next/commit/34e8e13a2b64708a0aed01092e4dbfd0e5013831
    technology:
    - javascript
- id: vuln-i18next-11f05959
  pattern: 'this.escapeValue = $OPTIONS.escapeValue;

    '
  pattern-not: 'this.escapeValue = $OPTIONS.escapeValue !== undefined ? $OPTIONS.escapeValue
    : true;

    '
  languages:
  - javascript
  message: 'Insecure default value for escapeValue detected. When escapeValue is undefined,
    it defaults to false, which can lead to XSS vulnerabilities. Always set a secure
    default value (true) when escapeValue is undefined.

    '
  severity: ERROR
  metadata:
    source-url: github.com/i18next/i18next/commit/11f059599889d857d497aa0499355be32df0dbb6
    category: security
    cwe: CWE-79
    owasp: A7:2017-Cross-Site Scripting (XSS)
    references:
    - https://owasp.org/www-community/attacks/xss/
    technology:
    - javascript
