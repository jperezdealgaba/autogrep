rules:
- id: vuln-cfrpki-eb9cc4db
  pattern: 'strings.ReplaceAll($PATH, "../", "")

    '
  pattern-not: "if strings.Contains($PATH, \"../\") || strings.Contains($PATH, \"\
    ..\\\\\") {\n  return fmt.Errorf(\"Path %q contains illegal path element\", $PATH)\n\
    }\n"
  languages:
  - go
  message: "Detected use of `strings.ReplaceAll` to sanitize file paths, which is\
    \ insufficient to prevent directory traversal attacks. \nAttackers can bypass\
    \ this by using alternative path separators or sequences. \nReplace with a check\
    \ that explicitly rejects paths containing `../` or `..\\\\` and returns an error.\n"
  severity: ERROR
  metadata:
    source-url: github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284
    category: security
    cwe:
    - CWE-22
    owasp:
    - 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/22.html
    technology:
    - go
- id: vuln-cfrpki-5f64bcd1
  pattern: "if $VAR > *$MAX {\n  log.Fatal($MESSAGE)\n}\n"
  pattern-not: "if $VAR > *$MAX {\n  log.Warning($MESSAGE)\n  $STABLE.Store(true)\n\
    }\n"
  languages:
  - go
  message: 'Detected a potential infinite repository traversal vulnerability. The
    code uses log.Fatal() when maximum iterations are reached, which causes the application
    to crash instead of gracefully handling the condition. This can lead to denial
    of service and unreliable system behavior. Replace log.Fatal() with a warning
    and implement a graceful termination mechanism.

    '
  severity: ERROR
  metadata:
    source-url: github.com/cloudflare/cfrpki/commit/5f64bcd13477b29cd7ddff6fff3c65dfac3423ca
    category: security
    cwe:
    - CWE-400
    owasp:
    - A9:2017 - Using Components with Known Vulnerabilities
    references:
    - https://cwe.mitre.org/data/definitions/400.html
    technology:
    - go
