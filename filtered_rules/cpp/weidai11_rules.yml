rules:
- id: vuln-cryptopp-07dbcc3d
  pattern: 'bits = (m_distance >= COUNTOF($ARRAY)) ? $ARRAY[$INDEX] : $ARRAY[m_distance];

    '
  pattern-not: "if (m_distance >= COUNTOF($ARRAY))\n  throw BadDistanceErr();\nbits\
    \ = $ARRAY[m_distance];\n"
  languages:
  - cpp
  message: 'The code directly accesses an array without proper bounds checking, which
    can lead to out-of-bounds access and potential memory corruption. The vulnerability
    occurs when `m_distance` is greater than or equal to the size of the array, leading
    to undefined behavior. The fix involves adding explicit bounds checking and throwing
    an exception when the index is out of bounds.

    '
  severity: ERROR
  metadata:
    source-url: github.com/weidai11/cryptopp/commit/07dbcc3d9644b18e05c1776db2a57fe04d780965
    category: security
    cwe:
    - 'CWE-125: Out-of-bounds Read'
    owasp:
    - A1:2017-Injection
    references:
    - https://cwe.mitre.org/data/definitions/125.html
    technology:
    - cpp
- id: vuln-cryptopp-9fe5ccfb
  pattern: 'IsAlignedOn($PTR, GetAlignmentOf<$T*>())

    '
  pattern-not: 'IsAlignedOn($PTR, GetAlignmentOf<$T>())

    '
  languages:
  - cpp
  message: 'Detected incorrect pointer alignment check. The function `IsAlignedOn`
    is being called with `GetAlignmentOf<T*>()`, which checks alignment for a pointer
    to `T` instead of `T` itself. This can lead to incorrect alignment validation,
    potentially causing undefined behavior or security vulnerabilities. Fix by using
    `GetAlignmentOf<T>()` to check alignment for the type `T` directly.

    '
  severity: ERROR
  metadata:
    source-url: github.com/weidai11/cryptopp/commit/9fe5ccfbeed3c3c48b6e1d42e4abb64d11662527
    category: security
    cwe:
    - CWE-125
    owasp:
    - 'A1: Injection'
    references:
    - https://github.com/weidai11/cryptopp/issues/992
    technology:
    - cpp
- id: vuln-cryptopp-4bc7408a
  pattern: 'T m_array[$S];

    '
  pattern-not: 'CRYPTOPP_ALIGN_DATA(8) T m_array[$S];

    '
  languages:
  - cpp
  message: "Detected unaligned array declaration which may cause memory alignment\
    \ issues on some toolchains. \nThis can lead to performance degradation or crashes,\
    \ especially for 64-bit elements requiring 8-byte alignment. \nEnsure proper alignment\
    \ by using CRYPTOPP_ALIGN_DATA(8) for array declarations.\n"
  severity: ERROR
  metadata:
    source-url: github.com/weidai11/cryptopp/commit/4bc7408ae2aefac9357c16809541ecbe225b7f3a
    category: security
    cwe:
    - CWE-787
    owasp:
    - 'A9: Using Components with Known Vulnerabilities'
    references:
    - https://github.com/weidai11/cryptopp/issues/992
    technology:
    - cpp
