rules:
- id: vuln-bootstrap-dht-bbc0b719
  pattern: "char const* parse_int(char const* $START, char const* $END, char $DELIMITER,\
    \ boost::int64_t& $VAL)\n{\n    ...\n    if (!is_digit(*$START)) { return 0; }\n\
    \    ...\n    $VAL += *$START - '0';\n    ...\n}\n"
  pattern-not: "char const* parse_int(char const* $START, char const* $END, char $DELIMITER,\
    \ boost::int64_t& $VAL, bdecode_errors::error_code_enum& $EC)\n{\n    ...\n  \
    \  if (!numeric(*$START))\n    {\n        $EC = bdecode_errors::expected_string;\n\
    \        return $START;\n    }\n    ...\n    int $DIGIT = *$START - '0';\n   \
    \ if ($VAL > INT64_MAX - $DIGIT)\n    {\n        $EC = bdecode_errors::overflow;\n\
    \        return $START;\n    }\n    $VAL += $DIGIT;\n    ...\n}\n"
  languages:
  - cpp
  message: 'The function `parse_int` is vulnerable to integer overflow due to insufficient
    bounds checking when adding digits to the integer value. This can lead to undefined
    behavior or security vulnerabilities. The fix adds proper overflow checks before
    performing arithmetic operations. To fix this, ensure that all integer arithmetic
    operations are checked for potential overflow.

    '
  severity: ERROR
  metadata:
    source-url: github.com/bittorrent/bootstrap-dht/commit/bbc0b7191e3f48461ca6e5b1b34bdf4b3f1e79a9
    category: security
    cwe:
    - CWE-190
    owasp:
    - A9:2021-Security Logging and Monitoring Failures
    references:
    - https://cwe.mitre.org/data/definitions/190.html
    technology:
    - cpp
