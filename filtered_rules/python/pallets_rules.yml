rules:
- id: vuln-jinja-a2a6c930
  pattern: '$CALLABLE.__name__ != ''format''

    '
  pattern-not: '$CALLABLE.__name__ not in (''format'', ''format_map'')

    '
  languages:
  - python
  message: "Detected unsafe string formatting that does not account for 'format_map'.\
    \ \nThis could allow bypassing security restrictions in sandboxed environments.\
    \ \nEnsure to check for both 'format' and 'format_map' when validating callable\
    \ names.\n"
  severity: ERROR
  metadata:
    source-url: github.com/pallets/jinja/commit/a2a6c930bcca591a25d2b316fcfd2d6793897b26
    category: security
    cwe: CWE-470
    owasp: A03:2021-Injection
    references:
    - https://jinja.palletsprojects.com/en/3.0.x/sandbox/
    technology:
    - python
- id: vuln-jinja-acb672b6
  pattern: 'directory = tempfile.gettempdir()

    '
  pattern-not: 'directory = $OBJ._get_default_cache_dir()

    '
  languages:
  - python
  message: "Detected insecure use of system temporary directory without proper isolation.\
    \ \nThis can lead to cache collisions or security issues when multiple users \n\
    access the same directory. Use a user-specific cache directory instead.\n"
  severity: ERROR
  metadata:
    source-url: github.com/pallets/jinja/commit/acb672b6a179567632e032f547582f30fa2f4aa7
    category: security
    cwe: CWE-377
    owasp: A9:2017-Insufficient Attack Protection
    references:
    - https://cwe.mitre.org/data/definitions/377.html
    technology:
    - python
- id: vuln-werkzeug-f3c803b3
  pattern: "if $BUFFER.find(b\"--\" + $BOUNDARY) == -1:\n    ...\n"
  pattern-not: "$BOUNDARY = b\"--\" + $SELF.boundary\nif $BUFFER.find($BOUNDARY) ==\
    \ -1:\n    ...\n"
  languages:
  - python
  message: 'Detected a potential security issue in boundary checking logic. The original
    code directly concatenates the boundary string, which can lead to incorrect boundary
    detection. This vulnerability could allow for improper parsing of multipart data,
    potentially leading to security issues. The fix involves storing the boundary
    in a variable before checking its presence in the buffer.

    '
  severity: ERROR
  metadata:
    source-url: github.com/pallets/werkzeug/commit/f3c803b3ade485a45f12b6d6617595350c0f03e2
    category: security
    cwe: CWE-20
    owasp: A03:2021-Injection
    references:
    - https://werkzeug.palletsprojects.com/en/2.0.x/
    technology:
    - python
- id: vuln-flask-b178e89e
  pattern: '$DATA.decode($ENCODING or ''utf-8'')

    '
  pattern-not: "$ENCODING = $KWARGS.pop('encoding', None)\nif $ENCODING is None:\n\
    \    $ENCODING = detect_encoding($DATA)\n$DATA.decode($ENCODING)\n"
  languages:
  - python
  message: 'Detected unsafe decoding of data without proper encoding detection. This
    can lead to incorrect interpretation of data if the encoding is not explicitly
    specified or detected. Always use proper encoding detection, especially when handling
    JSON data, to ensure compatibility with different UTF encodings.

    '
  severity: ERROR
  metadata:
    source-url: github.com/pallets/flask/commit/b178e89e4456e777b1a7ac6d7199052d0dfdbbbe
    category: security
    cwe: CWE-172
    owasp: A6:2017-Security Misconfiguration
    references:
    - https://tools.ietf.org/html/rfc8259
    technology: python
- id: vuln-jinja-71679534
  pattern: "\" \".join(\n    f'{escape($KEY)}=\"{escape($VALUE)}\"'\n    for $KEY,\
    \ $VALUE in $DICT.items()\n    if $VALUE is not None and not isinstance($VALUE,\
    \ $UNDEFINED)\n)\n"
  pattern-not: "$ITEMS = []\nfor $KEY, $VALUE in $DICT.items():\n    if $VALUE is\
    \ None or isinstance($VALUE, $UNDEFINED):\n        continue\n    if $SPACE_RE.search($KEY)\
    \ is not None:\n        raise ValueError(f\"Spaces are not allowed in attributes:\
    \ '{$KEY}'\")\n    $ITEMS.append(f'{escape($KEY)}=\"{escape($VALUE)}\"')\n\" \"\
    .join($ITEMS)\n"
  languages:
  - python
  message: 'Detected unsafe XML attribute generation without space validation in keys.

    This can lead to XSS vulnerabilities if keys contain malicious content.

    Add space validation to prevent unsafe attribute keys.

    '
  severity: ERROR
  metadata:
    source-url: github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7
    category: security
    cwe: CWE-79
    owasp: A7:2017-Cross-Site Scripting (XSS)
    technology: python
