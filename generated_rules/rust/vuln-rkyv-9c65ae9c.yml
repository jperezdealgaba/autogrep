rules:
- id: vuln-rkyv-9c65ae9c
  pattern: 'let mut $VAR = mem::MaybeUninit::zeroed();

    '
  pattern-not: 'let mut $VAR = mem::MaybeUninit::<$TYPE>::uninit();

    $VAR.as_mut_ptr().write_bytes(0, 1);

    '
  languages:
  - rust
  message: 'Using `MaybeUninit::zeroed()` can lead to undefined behavior if the type
    being initialized does not allow zeroed memory. This was fixed by initializing
    the memory with `uninit()` and explicitly writing zeroes to the memory location.
    Always ensure memory is properly initialized to avoid undefined behavior.

    '
  severity: ERROR
  metadata:
    source-url: github.com/djkoloski/rkyv/commit/9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e
    category: security
    cwe:
    - CWE-457
    owasp:
    - 'A9: Using Components with Known Vulnerabilities'
    references:
    - https://doc.rust-lang.org/std/mem/union.MaybeUninit.html
    technology:
    - rust
