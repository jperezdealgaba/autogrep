rules:
- id: vuln-moodle-59b5858d
  pattern: "$count = get_user_preferences('login_failed_count', 0, $user);\n$last\
    \ = get_user_preferences('login_failed_last', 0, $user);\n$sincescuccess = get_user_preferences('login_failed_count_since_success',\
    \ $count, $user);\n$sincescuccess = $sincescuccess + 1;\nset_user_preference('login_failed_count_since_success',\
    \ $sincescuccess, $user);\nif (empty($CFG->lockoutthreshold)) {\n    login_unlock_account($user);\n\
    \    return;\n}\nif (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow)\
    \ {\n    $count = 0;\n}\n$count = $count + 1;\nset_user_preference('login_failed_count',\
    \ $count, $user);\nset_user_preference('login_failed_last', time(), $user);\n\
    if ($count >= $CFG->lockoutthreshold) {\n    login_lock_account($user);\n}\n"
  pattern-not: "$lockfactory = \\core\\lock\\lock_config::get_lock_factory('core_failed_login_count_lock');\n\
    if ($lock = $lockfactory->get_lock($resource, 10)) {\n    try {\n        $count\
    \ = get_user_preferences('login_failed_count', 0, $user);\n        $last = get_user_preferences('login_failed_last',\
    \ 0, $user);\n        $sincescuccess = get_user_preferences('login_failed_count_since_success',\
    \ $count, $user);\n        $sincescuccess = $sincescuccess + 1;\n        set_user_preference('login_failed_count_since_success',\
    \ $sincescuccess, $user);\n        if (empty($CFG->lockoutthreshold)) {\n    \
    \        login_unlock_account($user);\n            $lock->release();\n       \
    \     return;\n        }\n        if (!empty($CFG->lockoutwindow) and time() -\
    \ $last > $CFG->lockoutwindow) {\n            $count = 0;\n        }\n       \
    \ $count = $count + 1;\n        set_user_preference('login_failed_count', $count,\
    \ $user);\n        set_user_preference('login_failed_last', time(), $user);\n\
    \        if ($count >= $CFG->lockoutthreshold) {\n            login_lock_account($user);\n\
    \        }\n        $lock->release();\n    } catch (Exception $e) {\n        $lock->release();\n\
    \    }\n} else {\n    throw new moodle_exception('locktimeout');\n}\n"
  languages:
  - php
  message: 'Detected a potential race condition in login failure count handling. The
    code increments and updates user login failure counts without proper locking,
    which could lead to inconsistent or incorrect failure counts. This vulnerability
    can be exploited to bypass account lockout mechanisms. To fix this, ensure that
    all login failure count updates are protected by a lock, as shown in the fixed
    version.

    '
  severity: ERROR
  metadata:
    source-url: github.com/moodle/moodle/commit/59b5858da200f63ecb59a9113af2b99ef1496fe5
    category: security
    cwe:
    - CWE-362
    - CWE-367
    owasp:
    - 'A2: Broken Authentication'
    technology:
    - php
