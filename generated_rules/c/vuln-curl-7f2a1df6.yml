rules:
- id: vuln-curl-7f2a1df6
  pattern: 'size_t $IDENTITY_LEN = ($USERLEN + $DOMLEN) * 2;

    unsigned char *$IDENTITY = malloc($IDENTITY_LEN);

    '
  pattern-not: "if(($USERLEN > SIZE_T_MAX/2) ||\n   ($DOMLEN > SIZE_T_MAX/2) ||\n\
    \   (($USERLEN + $DOMLEN) > SIZE_T_MAX/2))\n  return $ERROR;\nsize_t $IDENTITY_LEN\
    \ = ($USERLEN + $DOMLEN) * 2;\nunsigned char *$IDENTITY = malloc($IDENTITY_LEN);\n"
  languages:
  - c
  message: 'Integer overflow in size calculation can lead to buffer under-allocation.

    This vulnerability occurs when the sum of userlen and domlen multiplied by 2 exceeds
    the maximum value of size_t, potentially leading to insufficient memory allocation.

    To fix this, add length checks before performing the calculation to ensure it
    won''t overflow.

    '
  severity: ERROR
  metadata:
    source-url: github.com/curl/curl/commit/7f2a1df6f5fc598750b2c6f34465c8d924db28cc
    category: security
    cwe:
    - CWE-190
    owasp:
    - 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/190.html
    technology:
    - c
