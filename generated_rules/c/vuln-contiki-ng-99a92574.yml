rules:
- id: vuln-contiki-ng-99a92574
  pattern: 'uint8_t *$ADDR_PTR = ((uint8_t *)$RH_HEADER) + $RPL_RH_LEN + $RPL_SRH_LEN
    + ($I * (16 - $CMPRI));

    '
  pattern-not: "ptrdiff_t $RH_OFFSET = (uint8_t *)$RH_HEADER - $UIP_BUF;\nsize_t $ADDR_OFFSET\
    \ = $RPL_RH_LEN + $RPL_SRH_LEN + ($I * (16 - $CMPRI));\nif($RH_OFFSET + $ADDR_OFFSET\
    \ + 16 - $CMPR > $UIP_BUFSIZE) {\n  LOG_ERR(\"Invalid SRH address pointer\\n\"\
    );\n  return 0;\n}\nuint8_t *$ADDR_PTR = ((uint8_t *)$RH_HEADER) + $ADDR_OFFSET;\n"
  languages:
  - c
  message: 'The code calculates a pointer without checking if it exceeds the buffer
    bounds, leading to potential out-of-bounds memory access. This vulnerability can
    cause memory corruption, crashes, or even remote code execution. The fix adds
    bounds checking before calculating the pointer. Always validate buffer boundaries
    before performing pointer arithmetic.

    '
  severity: ERROR
  metadata:
    source-url: github.com/contiki-ng/contiki-ng/commit/99a9257421ca5305ef6a360c02f63561e63ecc60
    category: security
    cwe:
    - 'CWE-125: Out-of-bounds Read'
    - 'CWE-787: Out-of-bounds Write'
    owasp:
    - 'A1: Injection'
    technology:
    - c
