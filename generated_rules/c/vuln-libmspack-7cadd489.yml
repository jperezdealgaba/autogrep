rules:
- id: vuln-libmspack-7cadd489
  pattern: "char *create_output_name(unsigned char *fname, unsigned char *dir, int\
    \ lower, int isunix, int utf8) {\n  ...\n  if (!(name = (unsigned char *) malloc(x\
    \ + 2))) {\n    fprintf(stderr, \"out of memory!\\n\");\n    return NULL;\n  }\n\
    \  ...\n  /* remove leading slashes */\n  while (*fname == sep) fname++;\n  ...\n\
    \  return (char *) name;\n}\n"
  pattern-not: "char *create_output_name(char *fname) {\n  ...\n  while (*fname ==\
    \ '/' || *fname == '\\\\') fname++;\n  ...\n  for (p = out; *p; p++) {\n    if\
    \ (p[0] == '.' && p[1] == '.' && (p[2] == '/' || p[2] == '\\\\')) {\n       p[0]\
    \ = p[1] = 'x';\n    }\n  }\n  ...\n  return out;\n}\n"
  languages:
  - c
  message: 'The function `create_output_name` is vulnerable to path traversal attacks
    due to insufficient validation of the input filename. The original implementation
    only removes leading slashes but does not prevent directory traversal sequences
    like "../". This can allow an attacker to write files to arbitrary locations on
    the filesystem. The fix ensures that "../" sequences are replaced with "xx/" to
    prevent traversal. Use the fixed version to mitigate this vulnerability.

    '
  severity: ERROR
  metadata:
    source-url: github.com/kyz/libmspack/commit/7cadd489698be117c47efcadd742651594429e6d
    category: security
    cwe:
    - CWE-22
    - CWE-73
    owasp: A1:2017-Injection
    references:
    - https://cwe.mitre.org/data/definitions/22.html
    - https://cwe.mitre.org/data/definitions/73.html
    technology:
    - c
