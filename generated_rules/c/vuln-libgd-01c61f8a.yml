rules:
- id: vuln-libgd-01c61f8a
  pattern: "if (!(($VAR + ($EXPR * $SIZE)) < $LIMIT)) {\n  ...\n  return -1;\n}\n\
    for ($I = 0; $I < $EXPR; $I++) {\n  for ($J = 0; $J < $SIZE; $J++, $CARET++) {\n\
    \    $BITMAP[$CARET] = $BUFFER[$VAR + $J];\n  }\n}\n"
  pattern-not: "if (($CARET + ($EXPR * $SIZE)) >= $LIMIT) {\n  ...\n  return -1;\n\
    }\nmemcpy($BITMAP + $CARET, $BUFFER + $VAR, $EXPR * $SIZE);\n$CARET += ($EXPR\
    \ * $SIZE);\n$VAR += ($EXPR * $SIZE);\n"
  languages:
  - c
  message: 'The code performs unsafe buffer access by directly copying data without
    proper bounds checking.

    This can lead to buffer overflows and memory corruption. The fix uses `memcpy`
    with proper bounds checking

    to ensure safe memory operations. Always validate buffer sizes before copying
    data.

    '
  severity: ERROR
  metadata:
    source-url: github.com/libgd/libgd/commit/01c61f8ab110a77ae64b5ca67c244c728c506f03
    category: security
    cwe:
    - CWE-120
    - CWE-125
    owasp:
    - 'A1: Injection'
    references:
    - https://cwe.mitre.org/data/definitions/120.html
    - https://cwe.mitre.org/data/definitions/125.html
    technology:
    - c
